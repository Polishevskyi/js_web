name: E2E and API Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit
      test_type:
        description: 'Test type to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - e2e
          - api

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    name: Test on ${{ matrix.browser }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: >-
          ${{
            github.event_name == 'workflow_dispatch' && github.event.inputs.browser != 'all'
            && fromJSON(format('["{0}"]', github.event.inputs.browser))
            || fromJSON('["chromium", "firefox", "webkit"]')
          }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Create .env file
        run: |
          echo "BASE_URL=${BASE_URL}" >> .env
          echo "STANDARD_USER=${STANDARD_USER}" >> .env
          echo "STANDARD_PASSWORD=${STANDARD_PASSWORD}" >> .env
          echo "API_BASE_URL=${API_BASE_URL}" >> .env
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          STANDARD_USER: ${{ secrets.STANDARD_USER }}
          STANDARD_PASSWORD: ${{ secrets.STANDARD_PASSWORD }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}

      - name: Run E2E tests
        if: ${{ !github.event.inputs.test_type || github.event.inputs.test_type == 'e2e' || github.event.inputs.test_type == 'all' }}
        run: npx playwright test tests/e2e --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Run API tests
        if: ${{ (!github.event.inputs.test_type || github.event.inputs.test_type == 'api' || github.event.inputs.test_type == 'all') && matrix.browser == 'chromium' }}
        run: npx playwright test tests/api --project=api
        env:
          CI: true

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results/
          retention-days: 30

  allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          path: allure-results
          merge-multiple: true

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          keep_files: true
