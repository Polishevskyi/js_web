name: E2E Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    name: Test on ${{ matrix.browser }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: >-
          ${{
            github.event_name == 'workflow_dispatch' && github.event.inputs.browser != 'all'
            && fromJSON(format('["{0}"]', github.event.inputs.browser))
            || fromJSON('["chromium", "firefox", "webkit"]')
          }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Create .env file
        run: |
          echo "BASE_URL=${BASE_URL}" >> .env
          echo "STANDARD_USER=${STANDARD_USER}" >> .env
          echo "STANDARD_PASSWORD=${STANDARD_PASSWORD}" >> .env
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          STANDARD_USER: ${{ secrets.STANDARD_USER }}
          STANDARD_PASSWORD: ${{ secrets.STANDARD_PASSWORD }}

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results/
          retention-days: 30

  allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          path: allure-results
          merge-multiple: true

      - name: Create allure-history directory
        if: always()
        run: mkdir -p allure-history

      - name: Get Allure history
        if: always()
        continue-on-error: true
        run: |
          if git ls-remote --exit-code --heads origin gh-pages; then
            git fetch origin gh-pages:gh-pages
            git checkout gh-pages
            if [ -d "allure-history" ]; then
              cp -r allure-history ../allure-history-backup
            fi
            git checkout -
            if [ -d "../allure-history-backup" ]; then
              cp -r ../allure-history-backup/* allure-history/ 2>/dev/null || true
            fi
          else
            echo "gh-pages branch does not exist yet, creating fresh history"
          fi

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: Save Allure history for next run
        if: always()
        run: |
          if [ -d "allure-history" ]; then
            echo "Allure history directory exists, keeping it for next run"
            ls -la allure-history/
            echo "History files count: $(find allure-history -name "*.json" | wc -l)"
          else
            echo "Allure history directory not found"
          fi

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          keep_files: true
